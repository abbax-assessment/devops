name: deploy:terraform

on:
  pull_request:
    branches:
      - '**'
  push:
    branches:
      - production
      - stage
      - dev
        
jobs:     
  init:
    runs-on: ubuntu-latest  
    environment: 'terraform-${{ github.ref_name }}'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            terraform

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.8

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_DEFAULT_REGION }}

      - name: Cache Terraform
        uses: actions/cache@v4
        id: terraform-cache
        with:
          path: .terraform
          key: terraform-cache-${{ github.ref }}
          restore-keys: terraform-cache-

      - name: Terraform Init
        working-directory: terraform
        run: |
          terraform init

  validate:
    runs-on: ubuntu-latest
    needs: init
    environment: 'terraform-${{ github.ref_name }}'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            terraform

      - name: terraform validate
        working-directory: terraform
        run: terraform validate

  trivy-scan:
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            terraform
      - name: Run trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        continue-on-error: true
        env:
          TRIVY_DB_REPOSITORY: "public.ecr.aws/aquasecurity/trivy-db:2"        
        with:
          scan-type: 'config'
          hide-progress: true
          format: 'sarif'
          output: 'trivy-results.sarif'
          exit-code: '1'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: failure()
        with:
          sarif_file: 'trivy-results.sarif'

  plan-apply:
    runs-on: ubuntu-latest
    needs: trivy-scan
    environment: 'terraform-${{ github.ref_name }}'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            terraform

      - name: terraform init
        working-directory: terraform
        run: terraform init

      - name: terraform workspace select
        working-directory: terraform
        run: terraform workspace select ${{ github.ref_name }}

      - name: terraform apply
        working-directory: terraform
        run: terraform apply -var-file=./variables/${{ github.ref_name }}.tfvars -auto-approve