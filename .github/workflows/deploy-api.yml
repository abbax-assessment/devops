name: deploy:api
on:
  workflow_dispatch:
    inputs:
      workflow-run-id:
        description: 'The upstream workflow run id'
        required: true
      artifact-id:
        description: 'The artifact id to deploy'
        required: true
      tag:
        description: 'The tag of the artifact to deploy'
        required: true
        
jobs:     
  build-scan-push:
    runs-on: ubuntu-latest    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            deployments/api

      - name: Download artifact
        uses: actions/download-artifact@v4
        id: download-artifact
        with:
          github-token: ${{ secrets.ORG_TOKEN }}
          repository: ${{ vars.DEPLOYMENT_API_REPO }}
          name: ${{ github.event.inputs.artifact-id }}
          run-id: ${{ github.event.inputs.workflow-run-id }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_DEFAULT_REGION }}

      - name: Login to ECR
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.ECR_API_APP_URL }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        uses: docker/metadata-action@v4
        id: docker-metadata
        with:
          images: |
            ${{ vars.ECR_API_APP_URL }}
          tags: |
            type=raw,value={{sha}}-{{date 'X'}}

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          tags: ${{ steps.docker-metadata.outputs.tags }}
          labels: ${{ steps.docker-metadata.outputs.labels }}
          push: true     
          file: deployments/api/Dockerfile 

      # - name: Run trivy vulnerability scanner
      #   uses: aquasecurity/trivy-action@0.28.0
      #   env:
      #     TRIVY_DB_REPOSITORY: "public.ecr.aws/aquasecurity/trivy-db:2"        
      #   with:
      #     image-ref: ${{ steps.docker-metadata.outputs.tags }}
      #     format: 'table'
      #     exit-code: '1'
      #     ignore-unfixed: false
      #     vuln-type: 'os,library'
      #     severity: 'CRITICAL,HIGH'
      #     output: 'trivy-results.sarif'

      # - name: Upload Trivy scan results to GitHub Security tab
      #   uses: github/codeql-action/upload-sarif@v3
      #   with:
      #     sarif_file: 'trivy-results.sarif'

      # - name: "Push to ECR"
      #   run: |
      #     docker push ${{ steps.docker-metadata.outputs.tags }}
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ vars.ECS_TASK_DEFINITION }}
          container-name: api
          image: ${{ steps.docker-metadata.outputs.tags }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ vars.ECS_SERVICE }}
          cluster: ${{ vars.ECS_CLUSTER }}
          wait-for-service-stability: true


