name: deploy:api
on:
  workflow_dispatch:
    inputs:
      artifact-id:
        description: 'The artifact id to deploy'
        required: true
      tag:
        description: 'The tag of the artifact to deploy'
        required: true
        
defaults:
  run:
    working-directory: ./deployments/api

env:
  APP_PREFIX: api

jobs:
  download-artifact:
    runs-on: ubuntu-latest
      id: download-artifact
      uses: dawidd6/action-download-artifact@v6
      with:
        github_token: ${{ secrets. ORG_TOKEN }}
        repo: ${{ vars.DEPLOYMENT_API_REPO}}
        name: ${{ github.event.inputs.artifact-id }}
  build:
    runs-on: ubuntu-latest
    needs: download-artifacts
    steps:
      - name: Login to ECR
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.ECR_API_APP_URL }}
          username: ${{ vars.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Build the image
        run: |
          docker build -t ${{ env.APP_PREFIX }}:$GITHUB_SHA
  trivy-check:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Run trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ${{ env.APP_PREFIX }}:$GITHUB_SHA
          format: 'table'
          exit-code: '1'
          ignore-unfixed: false
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          output: 'trivy-results.sarif'
          
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'
  push:
    runs-on: ubuntu-latest
    needs: build
      run: |
        docker tag ${{ env.APP_PREFIX }}:$GITHUB_SHA ${{ vars.ECR_API_APP_URL }}/${{ env.APP_PREFIX }}:$GITHUB_SHA
        docker push ${{ vars.ECR_API_APP_URL }}/${{ env.APP_PREFIX }}:$GITHUB_SHA
        


